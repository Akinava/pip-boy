/*asm  ( 
  
"ldi  r24, 0x00 \n\t    ; r24 загрузка числа 0 в регистр" \ 
"nop \n\t               ; Пустая операция" \
"subi r24, 0xFF \n\t    ; r24 вычитание числа 255 из регистрa, т.е. прибaвлениe +1" \
"cpi  r24, 0x01 \n\t    ; r24 сравнение регистра с числом 100" \
"brne .-8 \n\t          ; Если сравнение было неверным, то переход обратно на 8 байт"

);*/



// OCR2A=1;
// TCCR2A=1;
// TCCR2B=0b00001001;
// TIMSK2=0b00000010; // Включити таймер

// TIMSK2=0b00000000; // Виключити таймер
// TIMSK2=0b00000010;  // Включити таймер
// ISR(TIMER2_COMPA_vect) {   MyBuff_AI0[N++] = PIND ;  }


                                          //ADCSRA = (1 << ADEN) | (1 << ADSC) | (0 << ADATE) | (0 << ADIF) | (0 << ADIE) | (0 << ADPS2) | (1 << ADPS1) | (0 << ADPS0);
                                          //0 ADEN: Разрешение работы ADC 
                                          //1 ADSC: Запуск преобразования ADC
                                          //0 ADATE: Включение режима автоматического запуска ADC
                                          //0 ADIF: Флаг прерывания ADC
                                          //0 ADIE: Разрешение прерывания ADC 
                                          //000 ADPS2:0: Биты управления предделителем ADC 
                                          //000 - CLK/2
                                          //001 - CLK/2
                                          //010 - CLK/4
                                          //011 - CLK/8
                                          //100 - CLK/16
                                          //101 - CLK/32
                                          //110 - CLK/64
                                          //111 - CLK/128                                           
                                          //ADMUX =  (0 << REFS1) | (0 << REFS0) | (1 << ADLAR)  | (0 << MUX3) | (0 << MUX2)  | (0 << MUX1)  | (0 << MUX0) ;
                                         // ADMUX =  (0 << REFS1) | (0 << REFS0) | (1 << ADLAR)  | (0 << MUX3) | (0 << MUX2)  | (0 << MUX1)  | (0 << MUX0) ;
                                          //REFS1  REFS0  устанавливают какой источник опорного напряжения будет выбран:
                                          //00 - опорное напряжение на входе AREF (21 ножка)
                                          //01 - Vпитания (вход AREF должен быть отключен. или к нему можно подключить фильтрующий конденсатор)
                                          //10 - резерв
                                          //11 - внутренний ИОН 1.1 В (к входу AREF можно подключить фильтрующий конденсатор)
                                          //ADLAR (5) регистра ADMUX позволяет выравнивать результат преобразования по левому краю при записи в него 1.                                          
                                          //MUX3 - MUX0 (3 - 0) - управляют мультиплексором:
                                          
                                          //0000 - вход ADC0 (23 ножка)
                                          //0001 - вход ADC1 (24 ножка)
                                          //0010 - вход ADC2 (25 ножка)
                                          //0011 - вход ADC3 (26 ножка)
                                          //0100 - вход ADC4 (27 ножка)
                                          //0101 - вход ADC5 (28 ножка)
                                          //0111 - резерв
                                          //1000 - датчик температуры
                                          //1001 - 1101 - резерв
                                          //1110 - 1.1 В
                                          //1111 - 0 В (земля)

